/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c PidginService -p pidginservice.h:pidginservice.cpp im.pidgin.purple.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef PIDGINSERVICE_H_1342329749
#define PIDGINSERVICE_H_1342329749

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "datatypes.h"

/*
 * Proxy class for interface im.pidgin.purple.PurpleObject
 */
class PidginService: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "im.pidgin.purple.PurpleObject"; }

public:
    PidginService(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~PidginService();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> PurpleAccountGetAlias(int accountId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(accountId);
        return asyncCallWithArgumentList(QLatin1String("PurpleAccountGetAlias"), argumentList);
    }

    inline QDBusPendingReply<QString> PurpleAccountGetNameForDisplay(int accountId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(accountId);
        return asyncCallWithArgumentList(QLatin1String("PurpleAccountGetNameForDisplay"), argumentList);
    }

    inline QDBusPendingReply<int> PurpleAccountsFind(const QString &name, const QString &protocol)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(name) << QVariant::fromValue(protocol);
        return asyncCallWithArgumentList(QLatin1String("PurpleAccountsFind"), argumentList);
    }

    inline QDBusPendingReply<QList<int> > PurpleAccountsGetAll()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("PurpleAccountsGetAll"), argumentList);
    }

    inline QDBusPendingReply<QString> PurpleBuddyGetAlias(int buddyId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(buddyId);
        return asyncCallWithArgumentList(QLatin1String("PurpleBuddyGetAlias"), argumentList);
    }

    inline QDBusPendingReply<QString> PurpleBuddyGetName(int buddyId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(buddyId);
        return asyncCallWithArgumentList(QLatin1String("PurpleBuddyGetName"), argumentList);
    }

    inline QDBusPendingReply<> PurpleConvImSend(int messageId, const QString &message)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(messageId) << QVariant::fromValue(message);
        return asyncCallWithArgumentList(QLatin1String("PurpleConvImSend"), argumentList);
    }

    inline QDBusPendingReply<> PurpleConversationDestroy(int conversationId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(conversationId);
        return asyncCallWithArgumentList(QLatin1String("PurpleConversationDestroy"), argumentList);
    }

    inline QDBusPendingReply<int> PurpleConversationGetImData(int conversationId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(conversationId);
        return asyncCallWithArgumentList(QLatin1String("PurpleConversationGetImData"), argumentList);
    }

    inline QDBusPendingReply<int> PurpleConversationNew(int conversationType, int accountId, const QString &name)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(conversationType) << QVariant::fromValue(accountId) << QVariant::fromValue(name);
        return asyncCallWithArgumentList(QLatin1String("PurpleConversationNew"), argumentList);
    }

    inline QDBusPendingReply<QList<int> > PurpleFindBuddies(int accountId, const QString &screenName)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(accountId) << QVariant::fromValue(screenName);
        return asyncCallWithArgumentList(QLatin1String("PurpleFindBuddies"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace im {
  namespace pidgin {
    namespace purple {
      typedef ::PidginService PurpleObject;
    }
  }
}
#endif
